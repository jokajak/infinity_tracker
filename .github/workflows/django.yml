name: Django CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: github_actions
  DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}"

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.3
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        # needed because the postgres container does not provide a healtcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    env:
      USE_DOCKER: no

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: psycopg2 prerequisites
      run: sudo apt-get install python-dev libpq-dev
    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}

    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs

    - name: Output current working directory contents
      run: ls -la

    - name: Output current path
      run: pwd

    - name: Install Python Dependencies
      run: poetry install

    - name: Run migrations
      run: poetry run ./manage.py migrate

    - name: Test with pytest
      run: poetry run pytest --cov . -n 2
